services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 2s
      timeout: 2s
      retries: 30

  gateway:
    image: envoyproxy/envoy:v1.33.0
    ports:
      - "8000:80"
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
    depends_on:
      - order-service
      - stock-service
      - payment-service

  order-service:
    build: ./order
    image: order:latest
    deploy:
      mode: replicated
      replicas: 4
    environment:
      - GATEWAY_URL=http://gateway:80
      - REDIS_URL=redis://sentinel:26379/0?sentinelMaster=order-db
    command: gunicorn -b 0.0.0.0:5000 -w 1 --timeout 30 --log-level=info app:app
    env_file:
      - env/order_redis.env
      - env/api.env
    depends_on:
      order-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  order-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb --masterauth redis
    environment:
      - REDIS_PASSWORD=redis
    networks:
      - redis_network

  order-db-replica:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --replicaof order-db 6379 --masterauth redis
    environment:
      - REDIS_PASSWORD=redis
    networks:
      - redis_network
    depends_on:
      - order-db

  order-sentinel:
    image: redis:7.2-bookworm
    command: redis-sentinel /etc/redis/sentinel.conf
    volumes:
      - ./sentinel-order.conf:/etc/redis/sentinel.conf
    networks:
      - redis_network
    depends_on:
      - order-db
      - order-db-replica


  stock-service:
    build: ./stock
    image: stock:latest
    deploy:
      mode: replicated
      replicas: 2
    environment:
      - REDIS_URL=redis://sentinel:26379/1?sentinelMaster=stock-db
    command: gunicorn -b 0.0.0.0:5000 -w 1 --timeout 30 --log-level=info app:app
    env_file:
      - env/stock_redis.env
      - env/api.env
    depends_on:
      stock-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  stock-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb --masterauth redis
    environment:
      - REDIS_PASSWORD=redis
    networks:
      - redis_network

  stock-db-replica:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --replicaof stock-db 6379 --masterauth redis
    environment:
      - REDIS_PASSWORD=redis
    networks:
      - redis_network
    depends_on:
      - stock-db

  stock-sentinel:
    image: redis:7.2-bookworm
    command: >
      redis-sentinel /etc/redis/sentinel.conf
    volumes:
      - ./sentinel-stock.conf:/etc/redis/sentinel.conf
    networks:
      - redis_network
    depends_on:
      - stock-db
      - stock-db-replica

  payment-service:
    build: ./payment
    image: user:latest
    deploy:
      mode: replicated
      replicas: 2
    environment:
      - REDIS_URL=redis://sentinel:26379/2?sentinelMaster=payment-db
    command: gunicorn -b 0.0.0.0:5000 -w 1 --timeout 30 --log-level=info app:app
    env_file:
      - env/payment_redis.env
      - env/api.env
    depends_on:
      payment-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  payment-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb --masterauth redis
    environment:
      - REDIS_PASSWORD=redis
    networks:
      - redis_network

  payment-db-replica:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --replicaof payment-db 6379 --masterauth redis
    environment:
      - REDIS_PASSWORD=redis
    networks:
      - redis_network
    depends_on:
      - payment-db

  payment-sentinel:
    image: redis:7.2-bookworm
    command: >
      redis-sentinel /etc/redis/sentinel.conf
    volumes:
      - ./sentinel-payment.conf:/etc/redis/sentinel.conf
    networks:
      - redis_network
    depends_on:
      - payment-db
      - payment-db-replica

  master:
    image: locustio/locust
    ports:
     - "8089:8089"
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master -H http://master:8089
  
  worker:
    image: locustio/locust
    volumes:
      - ./:/mnt/locust
    deploy:
      replicas: 4
    command: -f /mnt/locust/locustfile.py --worker --master-host master

networks:
  redis_network:
    driver: bridge