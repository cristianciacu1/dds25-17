version: "3"
services:

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 2s
      timeout: 2s
      retries: 30

  gateway:
    image: nginx:1.25-bookworm
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"
    depends_on:
      - order-api
      - stock-api
      - payment-api
      - order-consumer
      - stock-consumer
      - payment-consumer

  order-api:
    build: ./order_api
    image: order-api:latest
    deploy:
      mode: replicated
      replicas: 6
    command: gunicorn -b 0.0.0.0:5000 -w 1 --timeout 30 --log-level=info app:app
    env_file:
      - env/api.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      order-consumer:
        condition: service_started

  
  order-consumer:
    build: ./order_consumer
    image: order-consumer:latest
    environment:
      - GATEWAY_URL=http://gateway:80
    deploy:
      mode: replicated
      replicas: 6
    command: sh -c "python app.py"
    env_file:
      - env/order_redis.env
    depends_on:
      order-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  order-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb

  stock-api:
    build: ./stock_api
    image: stock-api:latest
    deploy:
      mode: replicated
      replicas: 6
    command: gunicorn -b 0.0.0.0:5000 -w 1 --timeout 30 --log-level=info app:app
    env_file:
      - env/api.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      stock-consumer:
        condition: service_started
  
  stock-consumer:
    build: ./stock_consumer
    image: stock-consumer:latest
    environment:
      - GATEWAY_URL=http://gateway:80
    deploy:
      mode: replicated
      replicas: 6
    command: sh -c "python app.py"
    env_file:
      - env/stock_redis.env
    depends_on:
      stock-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  stock-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb

  payment-api:
    build: ./payment_api
    image:  payment-api:latest
    deploy:
      mode: replicated
      replicas: 6
    command: gunicorn -b 0.0.0.0:5000 -w 1 --timeout 30 --log-level=info app:app
    env_file:
      - env/api.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      payment-consumer:
        condition: service_started
  
  payment-consumer:
    build: ./payment_consumer
    image: payment-consumer:latest
    environment:
      - GATEWAY_URL=http://gateway:80
    deploy:
      mode: replicated
      replicas: 6
    command: sh -c "python app.py"
    env_file:
      - env/payment_redis.env
    depends_on:
      payment-db:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  payment-db:
    image: redis:7.2-bookworm
    command: redis-server --requirepass redis --maxmemory 512mb
